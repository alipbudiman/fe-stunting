# Docker Compose for ML Stunting Prediction System
version: '3.8'

services:
  # Backend ML Service
  backend:
    build: 
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "5000:5000"
    environment:
      - FLASK_ENV=production
      - PORT=5000
    networks:
      - stunting-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Frontend Next.js Service
  frontend:
    build:
      context: ./frontend/my-app
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      # Backend URL untuk komunikasi internal (container-to-container)
      - BACKEND_API_URL=http://backend:5000
      # Public URL untuk WebSocket (client-side)
      - NEXT_PUBLIC_API_URL=localhost:5000
      - NODE_ENV=production
    depends_on:
      backend:
        condition: service_healthy
    networks:
      - stunting-network
    restart: unless-stopped

  # Optional: Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./ssl:/etc/nginx/ssl  # SSL certificates jika diperlukan
    depends_on:
      - frontend
      - backend
    networks:
      - stunting-network
    restart: unless-stopped

networks:
  stunting-network:
    driver: bridge

volumes:
  backend_data:
    driver: local
